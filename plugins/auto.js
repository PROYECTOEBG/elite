// Guarda todos los intervalos por bot+chat
let autoInterval = {}

// Funci√≥n para iniciar el autoenv√≠o
const startAutoSend = (conn, chatId) => {
  const botId = conn.user?.jid
  const key = `${botId}|${chatId}`
  
  // Listas de mensajes
  const frases = [
    'La vida es un 10% lo que me ocurre y 90% c√≥mo reacciono a ello.',
    'El √©xito es la suma de peque√±os esfuerzos repetidos d√≠a tras d√≠a.',
    'Cada d√≠a es una nueva oportunidad para cambiar tu vida.',
    'No cuentes los d√≠as, haz que los d√≠as cuenten.',
    'El √∫nico lugar donde el √©xito viene antes que el trabajo es en el diccionario.'
  ]
  const animos = [
    '¬°T√∫ eres m√°s fuerte de lo que crees!',
    'Sigue adelante, lo mejor est√° por venir.',
    'Cada paso, por peque√±o que sea, te acerca a tu meta.',
    'Cree en ti: tienes todo lo necesario para triunfar.',
    'Hoy es un gran d√≠a para empezar algo nuevo.'
  ]
  const chistes = [
    '¬øPor qu√© los p√°jaros no usan Facebook? ¬°Porque ya tienen Twitter!',
    '¬øQu√© le dice un gusano a otro gusano? Voy a dar una vuelta a la manzana.',
    '‚ÄîOye, ¬øcu√°l es tu plato favorito? ‚ÄîPues el hondo, ¬°porque cabe m√°s comida!',
    '¬øC√≥mo se dice pa√±uelo en japon√©s? Saka-moko.',
    '‚Äî¬øCu√°l es tu animal favorito? ‚ÄîEl ping√ºino, ¬°porque siempre va de etiqueta!'
  ]
  const noticias = [
    'Noticia: Cient√≠ficos descubren un nuevo planeta potencialmente habitable.',
    'Noticia: Avanza vacuna que promete reducir resfriados comunes.',
    'Noticia: Tecnolog√≠a de IA crea obras de arte en segundos.',
    'Noticia: Nuevas bater√≠as recargan tu m√≥vil en 5 minutos.',
    'Noticia: Robot cirujano realiza primera operaci√≥n sin supervisi√≥n humana.'
  ]

  const categories = [
    { name: 'Frase',   list: frases },
    { name: '√Ånimo',   list: animos },
    { name: 'Chiste',  list: chistes },
    { name: 'Noticia', list: noticias }
  ]

  // Obtener todas las conexiones (bot principal + subbots)
  const connections = [conn, ...(global.conns?.map(c => c) || [])]

  if (!autoInterval[key]) {
    autoInterval[key] = setInterval(() => {
      const cat  = categories[Math.floor(Math.random() * categories.length)]
      const text = cat.list[Math.floor(Math.random() * cat.list.length)]
      
      // Enviar a trav√©s de todas las conexiones
      connections.forEach(bot => {
        if (bot?.user?.jid) { // Verificar que la conexi√≥n es v√°lida
          bot.sendMessage(chatId, { text: `*${cat.name}:* ${text}` })
          .catch(err => console.error(`Error al enviar mensaje con bot ${bot.user.jid}:`, err))
        }
      })
    }, 60_000) // cada 60s
  }
}

// Funci√≥n para detener el autoenv√≠o
const stopAutoSend = (conn, chatId) => {
  const botId = conn.user?.jid
  const key = `${botId}|${chatId}`
  
  if (autoInterval[key]) {
    clearInterval(autoInterval[key])
    delete autoInterval[key]
    return true
  }
  return false
}

let handler = async (m, { conn, args, usedPrefix, command }) => {
  const chatId = m.chat
  const botId  = conn.user?.jid
  const key    = `${botId}|${chatId}`

  // apagar
  if (args[0] === 'off') {
    if (stopAutoSend(conn, chatId)) {
      return m.reply('üõë Mensajes autom√°ticos detenidos.')
    } else {
      return m.reply('No hay env√≠os autom√°ticos activos en este chat.')
    }
  }

  // si ya existe
  if (autoInterval[key]) {
    return m.reply(`Ya est√° activo. Usa *${usedPrefix + command} off* para detener.`)
  }

  // Iniciar autom√°ticamente
  startAutoSend(conn, chatId)
  await m.reply('‚úÖ Env√≠o autom√°tico activado. Mandar√© un mensaje cada minuto en todos los bots.')
}

// Activar autom√°ticamente al cargar el plugin
global.autoSend = startAutoSend
global.stopAutoSend = stopAutoSend

// Activar en todos los chats al iniciar
global.autoSend(conn, m.chat)

handler.command = ['autoenvios', 'automensajes']
handler.help    = ['autoenvios off', 'automensajes off']
handler.tags    = ['tools']
// quitamos group/admin/rowner para que funcione en cualquier sesi√≥n
handler.group  = false
handler.admin  = false
handler.rowner = false

export default handler
