import { schedule } from 'node-schedule'
import fetch from 'node-fetch'

let handler = async (m, { conn, args, text, usedPrefix, command }) => {
    if (!args[0]) return m.reply(`*[‚ùó] Formato incorrecto*\n\n*Uso correcto:*
üî∞ ${usedPrefix + command} on -> Activar mensajes autom√°ticos
üî∞ ${usedPrefix + command} off -> Desactivar mensajes autom√°ticos
    
*Ejemplo:* ${usedPrefix + command} on`)

    let chat = global.db.data.chats[m.chat]
    
    if (args[0].toLowerCase() === 'on') {
        if (chat.automensaje) return m.reply('*[‚ùó] Los mensajes autom√°ticos ya est√°n activados en este chat*')
        chat.automensaje = true
        await startAutoMessages(conn, m.chat)
        m.reply('*[‚úÖ] Mensajes autom√°ticos activados*\n\n*Se enviar√°n mensajes cada minuto*')
    } else if (args[0].toLowerCase() === 'off') {
        if (!chat.automensaje) return m.reply('*[‚ùó] Los mensajes autom√°ticos ya est√°n desactivados en este chat*')
        chat.automensaje = false
        m.reply('*[‚úÖ] Mensajes autom√°ticos desactivados*')
    } else {
        m.reply(`*[‚ùó] Formato incorrecto*\n\n*Uso correcto:*
üî∞ ${usedPrefix + command} on -> Activar mensajes autom√°ticos
üî∞ ${usedPrefix + command} off -> Desactivar mensajes autom√°ticos
        
*Ejemplo:* ${usedPrefix + command} on`)
    }
}

handler.help = ['automensaje <on/off>']
handler.tags = ['group']
handler.command = /^(automensaje|autom)$/i
handler.group = true
handler.admin = true
handler.botAdmin = true

export default handler

// Mensajes predefinidos por categor√≠a
const mensajes = {
    frases: [
        "üåü *Frase del d√≠a:* La vida es como un libro, cada d√≠a una nueva p√°gina llena de sorpresas ‚ú®",
        "üéØ *Reflexi√≥n:* El √©xito no es el final, el fracaso no es fatal: es el coraje para continuar lo que cuenta üí´",
        "üåà *Inspiraci√≥n:* S√© el cambio que quieres ver en el mundo üåç",
        "üí≠ *Pensamiento:* La felicidad no es algo hecho. Viene de tus propias acciones ‚ú®",
        "üå∫ *Motivaci√≥n:* Cada d√≠a es una nueva oportunidad para cambiar tu vida üåü"
    ],
    chistes: [
        "üòÑ ¬øQu√© hace una abeja en el gimnasio?\n¬°Zum-ba! üêù",
        "üòÇ ¬øPor qu√© los p√°jaros no usan Facebook?\nPorque ya tienen Twitter üê¶",
        "ü§£ ¬øQu√© le dice un jaguar a otro jaguar?\n¬°Jaguar you! üêÜ",
        "üòÖ ¬øPor qu√© el libro de matem√°ticas est√° triste?\n¬°Porque tiene muchos problemas! üìö",
        "üòÜ ¬øQu√© hace una vaca en una computadora?\n¬°Vacebook! üêÆ"
    ],
    animo: [
        "üí™ *¬°T√∫ puedes con todo!* Hoy ser√° un d√≠a incre√≠ble ‚≠ê",
        "üåû *¬°Buenos d√≠as!* Que la energ√≠a positiva te acompa√±e en todo momento üåà",
        "‚ú® *¬°√Ånimo!* Cada d√≠a es una nueva oportunidad para brillar üåü",
        "üéØ *¬°A por todas!* El √©xito te est√° esperando üöÄ",
        "üí´ *¬°Conf√≠a en ti!* Eres capaz de lograr todo lo que te propongas üå†"
    ],
    noticias: [
        "üì∞ *Tecnolog√≠a:* La IA sigue revolucionando el mundo digital ü§ñ",
        "üåç *Medio Ambiente:* Nuevas iniciativas para combatir el cambio clim√°tico üå±",
        "üéÆ *Gaming:* Los √∫ltimos lanzamientos est√°n batiendo r√©cords üéØ",
        "üì± *Apps:* Las aplicaciones m√°s descargadas de la semana üí´",
        "ü§ñ *Innovaci√≥n:* Nuevos avances en rob√≥tica y automatizaci√≥n ‚ö°"
    ],
    consejos: [
        "üí° *Tip del d√≠a:* Bebe agua regularmente para mantenerte hidratado üíß",
        "üßò‚Äç‚ôÄÔ∏è *Bienestar:* Dedica 5 minutos al d√≠a a la meditaci√≥n üå∏",
        "üìö *Productividad:* Organiza tus tareas por prioridad üìù",
        "üåø *Salud:* Una caminata diaria mejora tu estado de √°nimo üö∂‚Äç‚ôÇÔ∏è",
        "üí™ *Fitness:* Estira tu cuerpo cada ma√±ana para activarte üåÖ"
    ]
}

// Funci√≥n para obtener un mensaje aleatorio
function getMensajeAleatorio() {
    const categorias = Object.keys(mensajes)
    const categoriaAleatoria = categorias[Math.floor(Math.random() * categorias.length)]
    const mensajesCategoria = mensajes[categoriaAleatoria]
    return mensajesCategoria[Math.floor(Math.random() * mensajesCategoria.length)]
}

// Funci√≥n para iniciar los mensajes autom√°ticos
async function startAutoMessages(conn, chatId) {
    // Programar el env√≠o de mensajes cada minuto
    schedule.scheduleJob('*/1 * * * *', async () => {
        try {
            const chat = global.db.data.chats[chatId]
            if (!chat?.automensaje) return // Si se desactiv√≥, no enviar m√°s mensajes
            
            const mensaje = getMensajeAleatorio()
            await conn.sendMessage(chatId, { text: mensaje })
        } catch (error) {
            console.error('Error al enviar mensaje autom√°tico:', error)
        }
    })
}
