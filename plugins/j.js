import { randomInt } from 'crypto';
import { join } from 'path';
import { readFileSync, writeFileSync, existsSync, mkdirSync, unlinkSync } from 'fs';

const handler = async (m, { conn, usedPrefix, command, args }) => {
    // Verificar si el usuario es propietario del bot
    if (!global.db.data.settings[conn.user.jid].jadibotmd) {
        return m.reply('üö´ *Acceso denegado*: Solo el propietario del bot puede usar este comando.');
    }

    // Configuraci√≥n de rutas
    const userDir = join('./GataBotSession/', m.sender.split('@')[0]);
    const codeFile = join(userDir, 'codigo_letras.txt');

    // Crear directorio si no existe
    if (!existsSync(userDir)) {
        mkdirSync(userDir, { recursive: true });
    }

    // Generar c√≥digo alfanum√©rico sin dependencias externas
    const generateCode = () => {
        const prefix = 'JADI-'; // Prefijo personalizable
        const letters = 'ABCDEFGHJKLMNPQRSTUVWXYZ'; // Eliminamos I y O para evitar confusi√≥n
        let code = '';
        
        // Generar 4 letras aleatorias
        for (let i = 0; i < 4; i++) {
            code += letters.charAt(randomInt(0, letters.length));
        }
        
        return prefix + code;
    };

    // Manejo de comandos
    if (command === 'generarcodigo') {
        const codigo = generateCode();
        writeFileSync(codeFile, codigo);
        
        const mensaje = `üîë *C√ìDIGO DE VINCULACI√ìN* üîë\n\n` +
                       `Aqu√≠ tienes tu c√≥digo de vinculaci√≥n:\n\n` +
                       `‚ú® *${codigo}* ‚ú®\n\n` +
                       `Para vincular tu dispositivo:\n` +
                       `1. Ve a WhatsApp Web/Desktop\n` +
                       `2. Selecciona "Vincular con c√≥digo"\n` +
                       `3. Ingresa este c√≥digo\n\n` +
                       `‚ö†Ô∏è *Este c√≥digo expira en 5 minutos*`;
        
        await conn.sendMessage(m.chat, { 
            text: mensaje,
            contextInfo: {
                externalAdReply: {
                    title: 'ELITE BOT GLOBAL - VINCULACI√ìN',
                    body: 'Vincula tu dispositivo de forma segura',
                    thumbnail: readFileSync('./media/menus/Menu2.jpg'),
                    mediaType: 1
                }
            }
        }, { quoted: m });

        // Eliminar el c√≥digo despu√©s de 5 minutos
        setTimeout(() => {
            if (existsSync(codeFile)) {
                try {
                    unlinkSync(codeFile);
                } catch (e) {
                    console.error('Error al eliminar c√≥digo:', e);
                }
            }
        }, 300000);

    } else if (command === 'verificarcodigo') {
        if (!args[0]) return m.reply(`‚ùå Por favor ingresa el c√≥digo a verificar.\nEjemplo: ${usedPrefix}verificarcodigo JADI-ABCD`);
        
        if (!existsSync(codeFile)) {
            return m.reply('‚ö†Ô∏è No hay ning√∫n c√≥digo pendiente de verificaci√≥n.');
        }
        
        const codigoGuardado = readFileSync(codeFile, 'utf-8').trim();
        const codigoIngresado = args[0].toUpperCase();
        
        if (codigoIngresado === codigoGuardado) {
            // L√≥gica para completar la vinculaci√≥n
            try {
                unlinkSync(codeFile);
            } catch (e) {
                console.error('Error al eliminar c√≥digo:', e);
            }
            
            await conn.sendMessage(m.chat, {
                text: '‚úÖ *VINCULACI√ìN EXITOSA*\n\n¬°Tu dispositivo ha sido vinculado correctamente!',
                contextInfo: {
                    externalAdReply: {
                        title: 'ELITE BOT GLOBAL',
                        body: 'Dispositivo vinculado con √©xito',
                        thumbnail: readFileSync('./media/menus/Menu3.jpg'),
                        mediaType: 1
                    }
                }
            }, { quoted: m });
            
            // Aqu√≠ podr√≠as agregar l√≥gica adicional como guardar credenciales
        } else {
            await m.reply('‚ùå *C√≥digo incorrecto*\nEl c√≥digo ingresado no coincide. Por favor int√©ntalo nuevamente.');
        }
    }
};

handler.help = [
    'generarcodigo',
    'verificarcodigo <c√≥digo>'
];
handler.tags = ['jadibot'];
handler.command = /^(generarcodigo|verificarcodigo)$/i;
handler.owner = false;

export default handler;
