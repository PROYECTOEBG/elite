import fetch from 'node-fetch';

let handler = async (m, { conn, args, usedPrefix, command }) => {
    // Lista de signos v√°lidos
    const signos = {
        'aries': '‚ôà Aries',
        'tauro': '‚ôâ Tauro',
        'geminis': '‚ôä G√©minis',
        'cancer': '‚ôã C√°ncer', 
        'leo': '‚ôå Leo',
        'virgo': '‚ôç Virgo',
        'libra': '‚ôé Libra',
        'escorpio': '‚ôè Escorpio',
        'sagitario': '‚ôê Sagitario',
        'capricornio': '‚ôë Capricornio',
        'acuario': '‚ôí Acuario',
        'piscis': '‚ôì Piscis'
    };
    
    // Obtener el signo solicitado
    const signo = args[0]?.toLowerCase();
    
    // Verificar si el signo es v√°lido
    if (!signo || !signos[signo]) {
        let listaSignos = Object.entries(signos).map(([key, val]) => `‚ñ¢ ${usedPrefix + command} ${key} - ${val}`).join('\n');
        return conn.reply(m, `‚ú® *Hor√≥scopo Disponible*\n\n${listaSignos}\n\nEjemplo: ${usedPrefix + command} cancer`, m);
    }
    
    try {
        // Mostrar estado de carga
        await conn.sendPresenceUpdate('composing', m.chat);
        
        // 1. Obtener imagen aleatoria del signo desde una API
        const horoscopeImage = await getHoroscopeImage(signo);
        
        // 2. Obtener predicci√≥n desde otra API
        const prediction = await getHoroscopePrediction(signo);
        
        // 3. Construir mensaje
        const message = `*${signos[signo]}*\n\n` +
                       `üìÖ *Fecha:* ${new Date().toLocaleDateString()}\n\n` +
                       `üîÆ *Predicci√≥n:*\n${prediction || 'Las estrellas no han revelado su destino hoy...'}\n\n` +
                       `üí´ *Consejo del d√≠a:* ${getRandomAdvice()}`;
        
        // 4. Enviar imagen con texto
        await conn.sendMessage(m.chat, {
            image: { url: horoscopeImage },
            caption: message,
            mentions: [m.sender]
        }, { quoted: m });
        
    } catch (error) {
        console.error('Error en hor√≥scopo:', error);
        conn.reply(m.chat, `‚ùå Error al consultar el hor√≥scopo. Intenta nuevamente m√°s tarde.`, m);
    }
};

// Funci√≥n para obtener imagen de hor√≥scopo desde API
async function getHoroscopeImage(sign) {
    // API 1: API de im√°genes gen√©ricas con tag de hor√≥scopo
    const api1 = `https://source.unsplash.com/500x500/?zodiac-${sign},astrology`;
    
    // API 2: API alternativa (puedes agregar m√°s)
    const api2 = `https://api.zodiac.com/images/${sign}/random`;
    
    // Intentar con la primera API
    try {
        const imgUrl = await fetch(api1).then(res => res.url);
        if (imgUrl.includes('unsplash.com')) return imgUrl;
    } catch (e) {}
    
    // Si falla, intentar con API alternativa
    try {
        const imgUrl = await fetch(api2).then(res => res.json()).then(data => data.url);
        return imgUrl;
    } catch (e) {
        // Si todo falla, imagen por defecto
        return 'https://i.imgur.com/5Q9s5vY.jpg';
    }
}

// Funci√≥n para obtener predicci√≥n desde API
async function getHoroscopePrediction(sign) {
    try {
        const response = await fetch(`https://horoscope-api.herokuapp.com/horoscope/today/${sign}`);
        const data = await response.json();
        return data.horoscope || data.prediction || null;
    } catch (e) {
        return null;
    }
}

// Consejos aleatorios (puedes ampliar esta lista)
function getRandomAdvice() {
    const advices = [
        "Conf√≠a en tu intuici√≥n hoy",
        "Es buen d√≠a para tomar decisiones importantes",
        "Evita los conflictos innecesarios",
        "El amor puede llegar cuando menos lo esperes",
        "Cuida tu salud emocional",
        "Un viaje corto podr√≠a ser beneficioso",
        "La paciencia ser√° tu mayor virtud hoy"
    ];
    return advices[Math.floor(Math.random() * advices.length)];
}

handler.help = ['horoscopoo <signo>'];
handler.tags = ['fun'];
handler.command = /^(horoscopoo|hor√≥scopo|signo)$/i;
handler.limit = true;

export default handler;
